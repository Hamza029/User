<snippet>
	<content><![CDATA[
// Dijkstra's algorithm
// initially set cost and dis to inf
// ff=distance, ss=node

vector<pll> graph[$1+5];
ll dis[$1+5];
ll n,m;

void dij(ll u)
{
    for(ll i=1; i<=n; i++)
    {
        dis[i]=inf;
    }
    dis[u]=0;
    // pushing negative to keep the samllest distance first
    priority_queue<pll> q;
    q.push({0,u});
    while(!q.empty())
    {
        u=q.top().ss;
        q.pop();
        for(auto v: graph[u])
        {
            if(dis[u]+v.ff<dis[v.ss])
            {
                dis[v.ss]=dis[u]+v.ff;
                q.push({-1*dis[v.ss],v.ss});
            }
        }
    }
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>Dijkstra</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
