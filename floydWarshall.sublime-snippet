<snippet>
	<content><![CDATA[
#define inf 1000000000
#define ninf -1000000000

const int N=105;

int graph[N][N];
int child[N][N];
int n,m;

void printPath(int u, int v)
{
    cout<<"path from "<<u<<" to "<<v<<": ";
    cout<<u<<" ";
    while(u!=v)
    {
        u=child[u][v];
        cout<<u<<" ";
    }
    cout<<endl;
}

void printMat()
{
    for(int i=1; i<=n; i++)
    {
        for(int j=1; j<=n; j++)
        {
            if(graph[i][j]==inf)
            {
                cout<<"inf\t";
            }
            else
            {
                cout<<graph[i][j]<<"\t";
            }
        }
        cout<<endl;
    }
}

void init()
{
    for(int i=1; i<=n; i++)
    {
        for(int j=1; j<=n; j++)
        {
            if(i==j) graph[i][j]=0;
            else graph[i][j]=inf;
            child[i][j]=j;
        }
    }
}

void calcMat()
{
    for(int k=1; k<=n; k++)
    {
        for(int i=1; i<=n; i++)
        {
            for(int j=1; j<=n; j++)
            {
                if(graph[i][k]+graph[k][j]<graph[i][j])
                {
                    graph[i][j]=graph[i][k]+graph[k][j];
                    child[i][j]=child[i][k];
                }
            }
        }
    }
}

void solve()
{
    cin>>n>>m;
    init();
    for(int i=1; i<=m; i++)
    {
        int u,v,w; cin>>u>>v>>w;
        graph[u][v]=w;
    }
    // printMat();
    calcMat();
    printMat();
    printPath(3,1);
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>floydWarshall</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
