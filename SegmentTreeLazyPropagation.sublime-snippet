<snippet>
	<content><![CDATA[
/*
    0 - Indexed
    query(1,0,n-1,a,b)
    update(1,0,n-1,a,b,v)
*/

// Segment Tree with Lazy Propagation

const ll N=100005;

ll ara[N];
struct node
{
    ll sum;
    ll prop;
}tree[4*N];

void build(ll curr, ll st, ll en)
{
    if(st>en)
    {
        return;
    }
    if(st==en)
    {
        tree[curr].sum=ara[st];
        tree[curr].prop=0;
        return;
    }
    ll mid=(st+en)/2;
    ll left=2*curr,right=left+1;
    build(left,st,mid);
    build(right,mid+1,en);
    tree[curr].sum=tree[left].sum+tree[right].sum;
    tree[curr].prop=0;
}
void update(ll curr, ll st, ll en, ll l, ll r, ll val)
{
    if(tree[curr].prop)
    {
        tree[curr].sum+=(en-st+1)*tree[curr].prop;
        if(st!=en)
        {
            tree[2*curr].prop+=tree[curr].prop;
            tree[2*curr+1].prop+=tree[curr].prop;
        }
        tree[curr].prop=0;
    }
    if(st>en || st>r || en<l)
    {
        return;
    }
    if(st>=l && en<=r)
    {
        tree[curr].sum+=(en-st+1)*val;
        if(st!=en)
        {
            tree[2*curr].prop+=val;
            tree[2*curr+1].prop+=val;
        }
        return;
    }
    ll mid=(st+en)/2;
    ll left=2*curr,right=left+1;
    update(left,st,mid,l,r,val);
    update(right,mid+1,en,l,r,val);
    tree[curr].sum=tree[left].sum+tree[right].sum;
}
ll query(ll curr, ll st, ll en, ll l, ll r)
{
    if(st>en || st>r || en<l)
    {
        return 0;
    }
    if(tree[curr].prop)
    {
        tree[curr].sum+=(en-st+1)*tree[curr].prop;
        if(st!=en)
        {
            tree[2*curr].prop+=tree[curr].prop;
            tree[2*curr+1].prop+=tree[curr].prop;
        }
        tree[curr].prop=0;
    }
    if(st>=l && en<=r)
    {
        return tree[curr].sum;
    }
    ll mid=(st+en)/2;
    ll left=2*curr,right=left+1;
    ll ans1=query(left,st,mid,l,r);
    ll ans2=query(right,mid+1,en,l,r);
    return ans1+ans2;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>segTreeLazy</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
